{"ast":null,"code":"import _classCallCheck from \"/Users/tamarauber/Desktop/FinalProjAuber/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamarauber/Desktop/FinalProjAuber/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamarauber/Desktop/FinalProjAuber/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamarauber/Desktop/FinalProjAuber/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamarauber/Desktop/FinalProjAuber/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamarauber/Desktop/FinalProjAuber/src/FirebaseLogin.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nvar FirebaseLogin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FirebaseLogin, _Component);\n\n  function FirebaseLogin(props) {\n    var _this;\n\n    _classCallCheck(this, FirebaseLogin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FirebaseLogin).call(this, props));\n    _this.autosignInEnabled = true;\n    _this.firebaseUIConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: function signInSuccessWithAuthResult(authResult, redirectUrl) {\n          //var credential = authResult.credential;\n          //var isNewUser = authResult.additionalUserInfo.isNewUser;\n          //var providerId = authResult.additionalUserInfo.providerId;\n          //var operationType = authResult.operationType;\n          _this.saveCurrentUserDataInApp();\n\n          _this.loginSuccess();\n\n          return false;\n        },\n        signInFailure: function signInFailure(error) {\n          console.error(\"** Firebase sign-in failed: \", error);\n\n          _this.loginFailed(error);\n\n          return false;\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(FirebaseLogin, [{\n    key: \"saveCurrentUserDataInApp\",\n    value: function saveCurrentUserDataInApp() {\n      var _this2 = this;\n\n      var user = firebase.auth().currentUser;\n      var userName = user.displayName;\n      var email = user.email;\n      var userPhotoUrl = user.photoURL;\n      var userId = user.uid;\n      console.log(\"got user: %s, %s, uid %s\", userName, email, userId);\n\n      (function (v) {\n        _this2.props.appActions.updateDataSlot(\"ds_SlotUserName\", v);\n      })(userName);\n\n      (function (v) {\n        _this2.props.appActions.updateDataSlot(\"ds_SlotUserEmail\", v);\n      })(email || '');\n\n      (function (v) {\n        _this2.props.appActions.updateDataSlot(\"ds_SlotUserPhoto\", v);\n      })(userPhotoUrl);\n\n      (function (v) {\n        _this2.props.appActions.updateDataSlot(\"ds_SlotUserID\", v);\n      })(userId);\n    }\n  }, {\n    key: \"loginSuccess\",\n    value: function loginSuccess() {\n      this.props.appActions.goToScreen('user');\n    }\n  }, {\n    key: \"loginFailed\",\n    value: function loginFailed(err) {// This is typically never called by Firebase UI because the sign-in flow is handled as a popup.\n      // We're including this code from React Studio as documentation for other plugins.\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(StyledFirebaseAuth, {\n        uiCallback: function uiCallback(ui) {\n          if (!_this3.autosignInEnabled) ui.disableAutoSignIn();\n        },\n        uiConfig: this.firebaseUIConfig,\n        firebaseAuth: firebase.auth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FirebaseLogin;\n}(Component);\n\nexport { FirebaseLogin as default };","map":{"version":3,"sources":["/Users/tamarauber/Desktop/FinalProjAuber/src/FirebaseLogin.js"],"names":["React","Component","firebase","StyledFirebaseAuth","FirebaseLogin","props","autosignInEnabled","firebaseUIConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","saveCurrentUserDataInApp","loginSuccess","signInFailure","error","console","loginFailed","user","currentUser","userName","displayName","email","userPhotoUrl","photoURL","userId","uid","log","v","appActions","updateDataSlot","goToScreen","err","ui","disableAutoSignIn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;IAEqBC,a;;;;;AAEnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AAEA,UAAKC,iBAAL,GAAyB,IAAzB;AAEA,UAAKC,gBAAL,GAAwB;AACtBC,MAAAA,UAAU,EAAE,OADU;AAEtBC,MAAAA,aAAa,EAAE,CACXP,QAAQ,CAACQ,IAAT,CAAcC,kBAAd,CAAiCC,WADtB,CAFO;AAKtBC,MAAAA,SAAS,EAAE;AACTC,QAAAA,2BAA2B,EAAE,qCAACC,UAAD,EAAaC,WAAb,EAA6B;AACxD;AACA;AACA;AACA;AACA,gBAAKC,wBAAL;;AACA,gBAAKC,YAAL;;AACA,iBAAO,KAAP;AACD,SATQ;AAUTC,QAAAA,aAAa,EAAE,uBAACC,KAAD,EAAW;AACxBC,UAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;;AACA,gBAAKE,WAAL,CAAiBF,KAAjB;;AACA,iBAAO,KAAP;AACD;AAdQ;AALW,KAAxB;AALiB;AA2BlB;;;;+CAE0B;AAAA;;AACzB,UAAIG,IAAI,GAAGrB,QAAQ,CAACQ,IAAT,GAAgBc,WAA3B;AACA,UAAIC,QAAQ,GAAGF,IAAI,CAACG,WAApB;AACA,UAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AACA,UAAIC,YAAY,GAAGL,IAAI,CAACM,QAAxB;AACA,UAAIC,MAAM,GAAGP,IAAI,CAACQ,GAAlB;AACAV,MAAAA,OAAO,CAACW,GAAR,CAAY,0BAAZ,EAAwCP,QAAxC,EAAkDE,KAAlD,EAAyDG,MAAzD;;AAEA,OAAC,UAACG,CAAD,EAAO;AAAE,QAAA,MAAI,CAAC5B,KAAL,CAAW6B,UAAX,CAAsBC,cAAtB,CAAqC,iBAArC,EAAwDF,CAAxD;AAA4D,OAAtE,EAAwER,QAAxE;;AACA,OAAC,UAACQ,CAAD,EAAO;AAAE,QAAA,MAAI,CAAC5B,KAAL,CAAW6B,UAAX,CAAsBC,cAAtB,CAAqC,kBAArC,EAAyDF,CAAzD;AAA6D,OAAvE,EAAyEN,KAAK,IAAI,EAAlF;;AACA,OAAC,UAACM,CAAD,EAAO;AAAE,QAAA,MAAI,CAAC5B,KAAL,CAAW6B,UAAX,CAAsBC,cAAtB,CAAqC,kBAArC,EAAyDF,CAAzD;AAA6D,OAAvE,EAAyEL,YAAzE;;AACA,OAAC,UAACK,CAAD,EAAO;AAAE,QAAA,MAAI,CAAC5B,KAAL,CAAW6B,UAAX,CAAsBC,cAAtB,CAAqC,eAArC,EAAsDF,CAAtD;AAA0D,OAApE,EAAsEH,MAAtE;AACD;;;mCAEc;AACb,WAAKzB,KAAL,CAAW6B,UAAX,CAAsBE,UAAtB,CAAiC,MAAjC;AAGD;;;gCAEWC,G,EAAK,CACf;AACA;AAED;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,kBAAD;AAAoB,QAAA,UAAU,EAAE,oBAAAC,EAAE,EAAI;AAAC,cAAI,CAAC,MAAI,CAAChC,iBAAV,EAA6BgC,EAAE,CAACC,iBAAH;AAAwB,SAA5F;AAA8F,QAAA,QAAQ,EAAE,KAAKhC,gBAA7G;AAA+H,QAAA,YAAY,EAAEL,QAAQ,CAACQ,IAAT,EAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA7DwCT,S;;SAAtBG,a","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nexport default class FirebaseLogin extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.autosignInEnabled = true;\n    \n    this.firebaseUIConfig = {\n      signInFlow: 'popup',\n      signInOptions: [\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        ],\n      callbacks: {\n        signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n          //var credential = authResult.credential;\n          //var isNewUser = authResult.additionalUserInfo.isNewUser;\n          //var providerId = authResult.additionalUserInfo.providerId;\n          //var operationType = authResult.operationType;\n          this.saveCurrentUserDataInApp();\n          this.loginSuccess();\n          return false;\n        },\n        signInFailure: (error) => {\n          console.error(\"** Firebase sign-in failed: \", error);\n          this.loginFailed(error);\n          return false;\n        },\n      }\n    };\n  }\n  \n  saveCurrentUserDataInApp() {\n    var user = firebase.auth().currentUser;\n    var userName = user.displayName;\n    var email = user.email;\n    var userPhotoUrl = user.photoURL;\n    var userId = user.uid;          \n    console.log(\"got user: %s, %s, uid %s\", userName, email, userId);\n    \n    ((v) => { this.props.appActions.updateDataSlot(\"ds_SlotUserName\", v) })(userName);\n    ((v) => { this.props.appActions.updateDataSlot(\"ds_SlotUserEmail\", v) })(email || '');\n    ((v) => { this.props.appActions.updateDataSlot(\"ds_SlotUserPhoto\", v) })(userPhotoUrl);\n    ((v) => { this.props.appActions.updateDataSlot(\"ds_SlotUserID\", v) })(userId);\n  }\n\n  loginSuccess() {\n    this.props.appActions.goToScreen('user');\n    \n\n  }\n  \n  loginFailed(err) {\n    // This is typically never called by Firebase UI because the sign-in flow is handled as a popup.\n    // We're including this code from React Studio as documentation for other plugins.\n\n  }\n  \n  render() {\n    return (\n      <StyledFirebaseAuth uiCallback={ui => {if (!this.autosignInEnabled) ui.disableAutoSignIn();}} uiConfig={this.firebaseUIConfig} firebaseAuth={firebase.auth()}/>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}